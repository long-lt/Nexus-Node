with import <nixpkgs> {};

mkShell {
  name = "nexus-dev-env";
  buildInputs = [
    git
    tmux
    bash
    coreutils
    curl
  ];

  shellHook = ''
    echo "‚úÖ Welcome to Nexus Dev Shell"

    # C√†i Nexus CLI n·∫øu ch∆∞a c√≥
    if ! command -v nexus-network >/dev/null 2>&1; then
      echo "üîß C√†i Nexus CLI..."
      curl -s https://cli.nexus.xyz/ | sh || echo "‚ö†Ô∏è Nexus CLI l·ªói"
    fi

    export BASE_DIR=$PWD/nodes
    export BINARY=~/.nexus/bin/nexus-network
    export NODE_IDS="16617818 16730538 16893236 16950341 16980199 16815174 16617953 16864458 16864460 16893385"

    start_nodes() {
      echo "üöÄ Kh·ªüi ƒë·ªông c√°c node b·∫±ng tmux..."
      i=1
      for NODE_ID in $NODE_IDS; do
        SESSION="node$i"
        NODE_DIR="$BASE_DIR/$SESSION"
        mkdir -p "$NODE_DIR"
        if ! tmux has-session -t "$SESSION" 2>/dev/null; then
          tmux new-session -d -s "$SESSION" "cd $NODE_DIR && $BINARY start --node-id $NODE_ID | tee node.log"
          echo "‚úÖ $SESSION node-id $NODE_ID ok"
        fi
        ((i++))
      done
    }

    stop_nodes() {
      echo "üõë D·ª´ng c√°c node..."
      for i in {1..11}; do
        tmux kill-session -t "node$i" 2>/dev/null && echo "‚úÖ node$i stopped"
      done
    }

    status_nodes() {
      echo "üìã Danh s√°ch c√°c node ƒëang ch·∫°y:"
      tmux ls 2>/dev/null || echo "üßæ Kh√¥ng c√≥ session n√†o"
    }

    logs_node() {
      if [ -z "$1" ]; then
        echo "‚ùå D√πng: logs_node <n>"; return 1;
      fi
      tmux attach -t "node$1" || echo "‚ùå Session node$1 kh√¥ng t·ªìn t·∫°i"
    }

    echo ""
    echo "‚û° D√πng c√°c l·ªánh sau:"
    echo "   start_nodes       - Kh·ªüi ƒë·ªông t·∫•t c·∫£ node"
    echo "   stop_nodes        - D·ª´ng t·∫•t c·∫£ node"
    echo "   status_nodes      - Xem tr·∫°ng th√°i tmux session"
    echo "   logs_node <n>     - Xem log c·ªßa node s·ªë n (vd: logs_node 2)"
    echo ""
  '';
}
